{"id":665,"date":"2019-09-02T15:51:02","date_gmt":"2019-09-02T19:51:02","guid":{"rendered":"http:\/\/ccvcl.org\/?page_id=665"},"modified":"2019-09-02T15:51:02","modified_gmt":"2019-09-02T19:51:02","slug":"csc-i6716-fall-2019-assignment-2","status":"publish","type":"page","link":"http:\/\/ccvcl.org\/home\/computer-vision-fall-2019\/csc-i6716-fall-2019-assignment-2\/","title":{"rendered":"CSc I6716 Fall 2019 -Assignment 2"},"content":{"rendered":"\n<p>Computer Science &#8211; The City College of New York <br>     <strong>Computer Vision <br>     Assignment 2 ( Deadline: 10\/21 Sunday) before midnight)<\/strong><br> ===============================================================<br> Note: All the writings of your assignment must be in &#8220;soft&#8221; copies   (in a single PDF file)\u00a0 by sending\u00a0 to Prof. Zhu   &lt;cv.zhu.ccny@gmail.com>  via an email attachment. You are responsible for the lose of  your submissions if you don&#8217;t include\u00a0 &#8220;<strong>CSC I6716<\/strong> &#8221; (exactly) in the <strong>subject <\/strong>of your email. For your programming part, in addition to the writing report, please also     send your source code\u00a0 &#8211; in their original formats; please don&#8217;t format them into PDF or Word formats. Please don&#8217;t send in  your images and executable.\u00a0 You may want to include images, tables, etc in your report as they show results of your work. Do write your names and IDs (last four digits) in both files for your  report and the code. <\/p>\n\n\n\n<hr class=\"wp-block-separator\"\/>\n\n\n\n<p>Choose one or two of the images on the web  or use an image of your own choice.\u00a0 If you use a different image, be careful that the image has not been saved under JPEG using a high level of compression.\u00a0 This often introduces artifacts into the image that confound subsequent analyses of the  results.\u00a0 For the most part, you should apply your operators to  a gray-scale version of the image.\u00a0 <br><br>     1. (20 points) Generate the histogram of the image you are     using, and then perform a number of histogram operations (such as     contrast enhancement, thresholding and equalization) to make the     image visually better for either viewing or processing (10     points).\u00a0 If it is a color image,\u00a0 please first turn it     into an intensity image and then generate its histogram.\u00a0 Try     to display your histogram (5 points), and make some observations of     the image based on its histogram (5 points). What are the general     distributions of the intensity values? How many major peaks and     valleys does your histogram have? How could you use the histogram to     understand, analyze or segment the image? Please also display the     histograms of the processed images and provide a few important     observations.<br><br>     2. (20 points) Apply the 1&#215;2 operator and Sobel operator to your     image and analyze the results of the gradient magnitude images     (including vertical gradients, horizontal gradients, and the     combined) (10 points). Please don&#8217;t forget to normalize your     gradient images, noting that the original vertical and horizontal     gradients have both positive and negative values. I would recommend     you to display the absolute values of the horizontal and vertical     gradient images.\u00a0 Does the Sobel operator have any clear visual     advantages over the 1&#215;2 operator? Any disadvantages (5 points)? If     you subtract the 1&#215;2 edge image from the Sobel are there any     residuals? You might use two different types of images: one ideal     man-made image, and one image of a real scene with more details (5     points). (<strong>Note: don&#8217;t forget to       normalize your results as shown in slide # 29 of\u00a0 feature       extraction lecture: part 2<\/strong>)<br><br>     3. (20 points) Generate edge maps of the above two combined gradient     maps (10 points).\u00a0 An edge image should be a binary image with     1s as edge points and 0s as non-edge points. You may first generate     a histogram of each gradient map,\u00a0 and only keep certain     percentage of pixels\u00a0 (e.g.\u00a0 5% of the pixels with the     highest gradient\u00a0 values) as edge pixels (edgels) . Use the     percentage to automatically find a threshold for the gradient     magnitudes. In your report, please write up the description and     probably equations for finding the threshold, and discuss if 5% is a     good value. If not what is (5 points) ? You may also consider to use     local, adaptive thresholds to different portions of the image so     that all major edges will be shown up nicely (5 points). In the end,     please try to generate a sketch of an image, such as the ID image of     Prof. Zhu.<br><br>     4. (20 points) What happens when you increase the size of the edge     detection kernel from 1&#215;2 to 3&#215;3 and then to 5&#215;5 , or 7&#215;7? Discuss     computational cost (in terms of members of operations, and the real     machine running times &#8211; 5 points), edge detection results (5 points)     and sensitivity to noise, etc. (5 points). Note that your larger     kernel should still be an edge detector. Please list your kernels as     matrices in your report, and tell us what they are good for (5     points). <br><br>     5.\u00a0 (20 points) Suppose you apply the Sobel operator to each of     the RGB color bands of a color image.\u00a0 How might you combine     these results into a color edge detector (5 points)?\u00a0 Do the     resulting edge differ from the gray scale results?\u00a0 How and why     (5 points)? You may compare the edge maps of the intensity image (of     the color image), the gray-scale edge map that are the combination     of the three edge maps from three color bands, or a real color edge     map that edge points have colors (5 points). Please discuss their     similarities and differences, and how each of them can be used for     image enhancement or feature extraction (5 points). Note that you     want to first generate gradient maps and then using thresholding to     generate edge maps.\u00a0 In the end, please try to generate a color     sketch of an image, such as the ID image of Prof. Zhu. You may also     consider local, adaptive thresholding in generating a color edge     map.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Computer Science &#8211; The City College of New York Computer Vision Assignment 2 ( Deadline: 10\/21 Sunday) before midnight) =============================================================== Note: All the writings of your assignment must be in&hellip;<\/p>\n","protected":false},"author":3,"featured_media":0,"parent":584,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"page-templates\/fullwidth.php","meta":{"footnotes":""},"_links":{"self":[{"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/pages\/665"}],"collection":[{"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/comments?post=665"}],"version-history":[{"count":2,"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/pages\/665\/revisions"}],"predecessor-version":[{"id":667,"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/pages\/665\/revisions\/667"}],"up":[{"embeddable":true,"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/pages\/584"}],"wp:attachment":[{"href":"http:\/\/ccvcl.org\/wp-json\/wp\/v2\/media?parent=665"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}